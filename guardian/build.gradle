plugins {
    id 'com.android.library'
    id "com.vanniktech.maven.publish" version "0.34.0"
}



apply from: rootProject.file('gradle/versioning.gradle')

version = getVersionFromFile()

logger.lifecycle("Using version ${version} for ${name}")


android {
    defaultConfig {
        compileSdk 33
        minSdkVersion 22
        targetSdkVersion 33
        buildConfigField "String", "VERSION_NAME", "\"${project.version}\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            all {
                maxHeapSize = "1024m"
            }
        }
    }
    namespace 'com.auth0.android.guardian.sdk'
}

mavenPublishing {
    publishToMavenCentral(false)
    signAllPublications()

    coordinates(
            project.group.toString(),
            findProperty("POM_ARTIFACT_ID")?.toString(),
            project.version.toString()
    )

    pom {
        name.set(findProperty("POM_NAME")?.toString())
        description.set(findProperty("POM_DESCRIPTION")?.toString())
        url.set(findProperty("POM_URL")?.toString())

        licenses {
            license {
                name.set(findProperty("POM_LICENCE_NAME")?.toString())
                url.set(findProperty("POM_LICENCE_URL")?.toString())
                distribution.set(findProperty("POM_LICENCE_DIST")?.toString())
            }
        }

        developers {
            developer {
                id.set(findProperty("POM_DEVELOPER_ID")?.toString())
                name.set(findProperty("POM_DEVELOPER_NAME")?.toString())
                email.set(findProperty("POM_DEVELOPER_EMAIL")?.toString())
            }
        }

        scm {
            url.set(findProperty("POM_URL")?.toString())
            connection.set(findProperty("POM_SCM_CONNECTION")?.toString())
            developerConnection.set(findProperty("POM_SCM_DEV_CONNECTION")?.toString())
        }
    }
}

dependencies {
    // Annotations (@NonNull etc)
    implementation 'androidx.annotation:annotation:1.9.1'
    // Gson
    implementation 'com.google.code.gson:gson:2.10.1'
    // OkHttp
    implementation platform('com.squareup.okhttp3:okhttp-bom:4.10.0')
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'com.squareup.okhttp3:logging-interceptor'
    // JWT signing/verification
    implementation 'com.auth0:java-jwt:4.5.0'

    testImplementation 'com.squareup.okhttp3:mockwebserver'
    // Mockito
    testImplementation 'org.mockito:mockito-core:4.6.1'
    // Hamcrest matchers
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    // Awaitility
    testImplementation 'org.awaitility:awaitility:4.2.0'
    // Robolectric
    testImplementation 'org.robolectric:robolectric:4.14'
    testImplementation 'junit:junit:4.13.2'
}